<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>seohaebada on TIL</title>
    <link>https://example.com/</link>
    <description>Recent content in seohaebada on TIL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://example.com/docs/redis/redis_cache/</link>
      <pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/redis/redis_cache/</guid>
      <description>레디스를 캐시로 사용하기 # [캐시란?] # 데이터의 원본보다 더 빠르고 효율적으로 액세스할 수 있는 임시 데이터 저장소를 의미한다.
[캐시로서의 레디스] # 레디스는 자체적으로 고가용성 기능을 가지고있다. 일부 캐싱 전략에서는 캐시에 접근할 수 없게 되면 이는 곧바로 서비스 장애로 이어질 수 있따. 캐시 저장소도 일반적인 데이터 저장소와 같이 안정적으로 운영될 수 있는 조건을 갖추는 것이 좋다. 레디스의 센티널, 클러스터 기능을 사용하면 마스터 노드의 장애를 자동으로 감지해 페일오버(Failover; 장애대비)를 발생시키기 때문에, 운영자의 개입 없이 캐시는 정상으로 유지될 수 있어 가용성이 높아진다.</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/redis/redis_datastructure/</link>
      <pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/redis/redis_datastructure/</guid>
      <description>레디스 자료구조 활용사례 # 리더보드 # 경쟁자들의 순위와 현재 점수를 보여주는 순위표를 의미한다. 스코어로 정렬되어 상위 경쟁자의 순위를 보여준다.
절대적 리더보드 서비스의 모든 유저를 정렬시켜 상위권의 목록만을 표시
상대적 리더보드 사용자의 스코어를 기반으로 그들을 다른 사용자와 비교해 순위를 결정 ex) 유저와 인접해있는 경쟁자들의 스코어를 보여주는 리더보드, 특정 그룹 내에서의 순위를 보여주는 리더보드, 주간 리더보드
리더보드는 기본적으로 사용자의 스코어를 기반으로 데이터를 정렬하는 서비스이기 때문에 사용자의 증가에 따라 가공해야할 데이터가 몇 배로 증가한다.</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/kotlin/Functional_Programming_Example/</link>
      <pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/kotlin/Functional_Programming_Example/</guid>
      <description>코틀린으로 함수형 프로그래밍 시작하기 # [고차함수 : 함수를 함수에 넘기기] # 함수형 프로그램을 작성할때 기본이 되는 몇가지 주제
함수도 값이다. 함수를 변수에 대입하거나 데이터 구조에 저장하거나 함수의 인자로 넘길 수 있다. 고차함수란? 다른 함수를 인자로 받는 함수
고차함수 예제 어떤 수의 절댓값과 다른 수의 계승(팩토리얼; factorial)을 출력하는 프로그램
루프를 함수적으로 작성하는 방법 n의 계승을 계산하는 함수를 추가한다. 재귀(recursion)를 통해 순수 함수로 루프를 작성할 수 있다. fun factorial(i: Int): Int { fun go(n: Int, acc: Int): Int = // &amp;lt;1&amp;gt; if (n &amp;lt;= 0) acc // 루프를 종료시키려면 재귀 호출을 하지 않고, 값을 반환한다.</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/kotlin/Functional_Programming/</link>
      <pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/kotlin/Functional_Programming/</guid>
      <description>함수형 프로그래밍이란? # 명령어 스타일 (imperative style) # 컴퓨터에게 정해진 명령 또는 지시를 하나하나 내림으로써 각 명령 단계마다 시스템의 상태를 바꾼다. 처음에는 단순화하려는 의도나, 시스템이 커질수록 복잡해지며, 그 결과 코드를 더이상 유지보수할 수 없게 되고, 테스트 하기 어려워지며 코드를 추론하는데에 어려워진다. 함수형 프로그래밍 (FP, Functional Programming) # 위 명령어 스타일의 대안으로, &amp;lsquo;부수 효과&amp;rsquo;를 완전히 없애는 개념이다. 함수형 프로그래밍의 전제는, 순수 함수를 통해 프로그램을 구성한다는 것이다. 순수 함수 : 아무 부수 효과가 없는 함수 부수 효과란?</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/algorithm/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/algorithm/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/batch/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/batch/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/data-structure/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/data-structure/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/ddd/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/ddd/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/docker/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/docker/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/etc/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/etc/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/java/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/java/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/jenkins/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/jenkins/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/jpa/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/jpa/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/kafka/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/kafka/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/linux/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/linux/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/mongodb/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/mongodb/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/msa/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/msa/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/mvc/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/mvc/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/mysql/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/mysql/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/network/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/network/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/operating-system/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/operating-system/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/oracle/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/oracle/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/reactive-streams/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/reactive-streams/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/security/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/security/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/servlet/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/servlet/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/spring/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/spring/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/test/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/test/000_sample/</guid>
      <description>sample</description>
    </item>
    <item>
      <title></title>
      <link>https://example.com/docs/webflux/000_sample/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/docs/webflux/000_sample/</guid>
      <description>sample</description>
    </item>
  </channel>
</rss>
